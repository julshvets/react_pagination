{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","event","preventDefault","map","page","active","concat","onPageClick","items","App","_useState","useState","_useState2","_slicedToArray","setCurrentPage","_useState3","_useState4","itemsPerPage","setItemsPerPage","length","lastIndexOnPage","firstIndexOnPage","visibleItems","slice","id","value","onChange","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28cf0883.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page:number) => void,\n}\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, numberOfPages);\n\n  const onClickPrevButton = (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== 1) {\n      const newPage = currentPage - 1;\n\n      onPageChange(newPage);\n    }\n  };\n\n  const onClickNextButton = (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== numberOfPages) {\n      const newPage = currentPage + 1;\n\n      onPageChange(newPage);\n    }\n  };\n\n  const onPageClick = (event: React.MouseEvent, page: number) => {\n    event.preventDefault();\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1\n            ? 'true'\n            : 'false'}\n          onClick={onClickPrevButton}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item', { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(event) => onPageClick(event, page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: currentPage === numberOfPages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages\n            ? 'true'\n            : 'false'}\n          onClick={onClickNextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const total = items.length;\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const onSelect = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  let lastIndexOnPage = itemsPerPage * currentPage;\n\n  if (lastIndexOnPage > total) {\n    lastIndexOnPage = total;\n  }\n\n  const firstIndexOnPage = (currentPage - 1) * itemsPerPage;\n  const visibleItems = items.slice(firstIndexOnPage, lastIndexOnPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndexOnPage + 1} - ${lastIndexOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={onSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        { visibleItems.map(item => (\n          <li data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}