{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","isLastPage","isFirstPage","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","event","preventDefault","map","page","active","concat","onPageClick","items","App","_useState","useState","_useState2","_slicedToArray","setCurrentPage","_useState3","_useState4","itemsPerPage","setItemsPerPage","length","lastIndexOnPage","lastIndex","getLastIndex","firstIndexOnPage","visibleItems","slice","id","value","onChange","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0946d1b7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getLastIndex(\n  itemsPerPage: number, currentPage: number, total: number,\n) {\n  let lastIndex = itemsPerPage * currentPage;\n\n  if (lastIndex > total) {\n    lastIndex = total;\n  }\n\n  return lastIndex;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page:number) => void,\n}\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, numberOfPages);\n  const isLastPage = currentPage === numberOfPages;\n  const isFirstPage = currentPage === 1;\n\n  const onClickPrevButton = (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== 1) {\n      const newPage = currentPage - 1;\n\n      onPageChange(newPage);\n    }\n  };\n\n  const onClickNextButton = (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== numberOfPages) {\n      const newPage = currentPage + 1;\n\n      onPageChange(newPage);\n    }\n  };\n\n  const onPageClick = (event: React.MouseEvent, page: number) => {\n    event.preventDefault();\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: isFirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={onClickPrevButton}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item', { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(event) => onPageClick(event, page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={onClickNextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers, getLastIndex } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const initialPage = 1;\n  const initialItemsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(initialPage);\n  const [itemsPerPage, setItemsPerPage] = useState(initialItemsPerPage);\n  const total = items.length;\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const onSelect = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(initialPage);\n  };\n\n  const lastIndexOnPage = getLastIndex(itemsPerPage, currentPage, total);\n  const firstIndexOnPage = (currentPage - 1) * itemsPerPage;\n  const visibleItems = items.slice(firstIndexOnPage, lastIndexOnPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndexOnPage + 1} - ${lastIndexOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={onSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        { visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}